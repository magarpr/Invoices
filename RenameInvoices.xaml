<Activity mc:Ignorable="sap sap2010 sads" x:Class="RenameInvoices" this:RenameInvoices.PDFFolder="C:\Users\kermit\Desktop\Invoices\"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:this="clr-namespace:"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="PDFFolder" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap2010:WorkflowViewState.IdRef>RenameInvoices_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main" sap2010:WorkflowViewState.IdRef="Sequence_148">
    <Sequence.Variables>
      <Variable x:TypeArguments="s:String[]" Name="files" />
    </Sequence.Variables>
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="Started renaming invoices" />
    <Assign DisplayName="Assign File List" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="s:String[]">[files]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:String[]">[Directory.GetFiles(PDFFolder, "*.pdf")]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:String" DisplayName="For each" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[files]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:String">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:String" Name="item" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Body" sap2010:WorkflowViewState.IdRef="Sequence_149">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="invoiceNo" />
              <Variable x:TypeArguments="x:String" Default="c321" Name="customerNo" />
            </Sequence.Variables>
            <Flowchart sap2010:Annotation.AnnotationText="Reading invoices PDF files and getting Invoice and Customer No" DisplayName="Get Invoice and Customer No" sap2010:WorkflowViewState.IdRef="Flowchart_3">
              <Flowchart.Variables>
                <Variable x:TypeArguments="x:String" Name="pdfText" />
              </Flowchart.Variables>
              <Flowchart.StartNode>
                <FlowStep x:Name="__ReferenceID0" sap2010:WorkflowViewState.IdRef="FlowStep_2">
                  <ui:ReadPDFText DisplayName="Read PDF text" FileName="[item]" sap2010:WorkflowViewState.IdRef="ReadPDFText_3" Range="1" Text="[pdfText]" />
                  <FlowStep.Next>
                    <FlowDecision x:Name="__ReferenceID1" Condition="[pdfText.Contains(&quot;Invoice&quot;) or pdfText.Contains(&quot;Credit Memo&quot;)]" DisplayName="English?" sap2010:WorkflowViewState.IdRef="FlowDecision_2">
                      <FlowDecision.True>
                        <FlowStep x:Name="__ReferenceID2" sap2010:WorkflowViewState.IdRef="FlowStep_3">
                          <Sequence DisplayName="Get English" sap2010:WorkflowViewState.IdRef="Sequence_184">
                            <If Condition="[pdfText.Contains(&quot;Credit Memo&quot;)]" sap2010:WorkflowViewState.IdRef="If_5">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_180">
                                  <Sequence sap2010:Annotation.AnnotationText="Get InvoiceNo from PDF" DisplayName="Get InvoiceNo" sap2010:WorkflowViewState.IdRef="Sequence_178">
                                    <Assign sap2010:Annotation.AnnotationText="Regexp to get Number after Invoice string" sap2010:WorkflowViewState.IdRef="Assign_31">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Regex.Match(pdfText, "(?&lt;=\b(?i)(Credit Memo)\s+)\d+").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence sap2010:Annotation.AnnotationText="Get CustomerNO from PDF" DisplayName="Get CustomerNo" sap2010:WorkflowViewState.IdRef="Sequence_179">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_32">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[customerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[pdfText.Substring(pdfText.IndexOf("Invoice account:") + 16).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_33">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[CustomerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[customerNo.Substring(0, customerNo.IndexOf(Environment.NewLine)).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_183">
                                  <Sequence sap2010:Annotation.AnnotationText="Get InvoiceNo from PDF" DisplayName="Get InvoiceNo" sap2010:WorkflowViewState.IdRef="Sequence_181">
                                    <Assign sap2010:Annotation.AnnotationText="Regexp to get Number after Invoice string" sap2010:WorkflowViewState.IdRef="Assign_34">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Regex.Match(pdfText, "(?&lt;=\b(?i)(Invoice)\s+)\d+").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence sap2010:Annotation.AnnotationText="Get CustomerNO from PDF" DisplayName="Get CustomerNo" sap2010:WorkflowViewState.IdRef="Sequence_182">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_35">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[customerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[pdfText.Substring(pdfText.IndexOf("Invoice account:") + 16).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[CustomerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[customerNo.Substring(0, customerNo.IndexOf(Environment.NewLine)).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </FlowStep>
                      </FlowDecision.True>
                      <FlowDecision.False>
                        <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_4">
                          <Sequence DisplayName="Get Norwegian" sap2010:WorkflowViewState.IdRef="Sequence_191">
                            <If Condition="[pdfText.Contains(&quot;Kreditnota&quot;)]" sap2010:WorkflowViewState.IdRef="If_6">
                              <If.Then>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_187">
                                  <Sequence sap2010:Annotation.AnnotationText="Get InvoiceNo from PDF" DisplayName="Get InvoiceNo" sap2010:WorkflowViewState.IdRef="Sequence_185">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Regex.Match(pdfText, "(?&lt;=\b(?i)(Kreditnota)\s+)\d+").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence sap2010:Annotation.AnnotationText="Get CustomerNO from PDF" DisplayName="Get CustomerNo" sap2010:WorkflowViewState.IdRef="Sequence_186">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[customerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[pdfText.Substring(pdfText.IndexOf("Fakturakonto:") + 13).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[CustomerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[customerNo.Substring(0, customerNo.IndexOf(Environment.NewLine)).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_190">
                                  <Sequence sap2010:Annotation.AnnotationText="Get InvoiceNo from PDF" DisplayName="Get InvoiceNo" sap2010:WorkflowViewState.IdRef="Sequence_188">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[invoiceNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[Regex.Match(pdfText, "(?&lt;=\b(?i)(Faktura)\s+)\d+").Value]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                  <Sequence sap2010:Annotation.AnnotationText="Get CustomerNO from PDF" DisplayName="Get CustomerNo" sap2010:WorkflowViewState.IdRef="Sequence_189">
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[customerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[pdfText.Substring(pdfText.IndexOf("Fakturakonto:") + 13).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                    <Assign sap2010:WorkflowViewState.IdRef="Assign_42">
                                      <Assign.To>
                                        <OutArgument x:TypeArguments="x:String">[CustomerNo]</OutArgument>
                                      </Assign.To>
                                      <Assign.Value>
                                        <InArgument x:TypeArguments="x:String">[customerNo.Substring(0, customerNo.IndexOf(Environment.NewLine)).Trim]</InArgument>
                                      </Assign.Value>
                                    </Assign>
                                  </Sequence>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                        </FlowStep>
                      </FlowDecision.False>
                    </FlowDecision>
                  </FlowStep.Next>
                </FlowStep>
              </Flowchart.StartNode>
              <x:Reference>__ReferenceID0</x:Reference>
              <x:Reference>__ReferenceID1</x:Reference>
              <x:Reference>__ReferenceID2</x:Reference>
              <x:Reference>__ReferenceID3</x:Reference>
            </Flowchart>
            <ui:MoveFile ContinueOnError="{x:Null}" Destination="[String.Format(&quot;{0}\[{1}].[{2}].pdf&quot;, PDFFolder, invoiceNo, customerNo)]" DisplayName="Rename PDF File" sap2010:WorkflowViewState.IdRef="MoveFile_1" Overwrite="False" Path="[item]" />
            <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[String.Format(&quot;Renaming invoice file from {0} to [{1}].[{2}].pdf{3}&quot;,  item.Split(&quot;\&quot;c).Last(),  invoiceNo, customerNo, Environment.NewLine)]" />
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <WriteLine DisplayName="Write line" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="Finished renaming invoices" />
    <sads:DebugSymbol.Symbol>dzRDOlxVc2Vyc1xhaWRhcy5ub3J2YWlzYXNcRGVza3RvcFxSZW5hbWVJbnZvaWNlcy54YW1sTgFiAYQBAQJHA4kCDgIBAUsFS3oCAWxMBVMOAgFoVAWGAhICAQSHAgWHAnsCAQJLXEt3AgFtUTJRWgIBa04zTjoCAWlUeFSBAQIBZloLgwIWAgEFhwJchwJ4AgEDXTxdQgIBBl8NgAIZAgEQgQINgQKDAgIBCYICDYICiwICAQdlE2WeAQIBYGdFZ5sBAgFdsgEb9QEmAgE3ahutASYCARGBAkGBApUBAgEMgQL4AYECgAICAQqCAmSCAogCAgEIZZABZZsBAgFkZUhlUAIBYmWHAWWKAQIBYbMBHfQBIgIBOGsdrAEiAgESswErswFXAgE5tQEh0gEsAgFM1QEh8gEsAgE7aytrWAIBE20higEsAgEmjQEhqgEsAgEVtgEjvwEuAgFYwAEj0QEuAgFN1gEj3wEuAgFH4AEj8QEuAgE8biN3LgIBMngjiQEuAgEnjgEjlwEuAgEhmAEjqQEuAgEWtwElvgEuAgFZwQElyAEuAgFSyQEl0AEuAgFO1wEl3gEuAgFI4QEl6AEuAgFB6QEl8AEuAgE9byV2LgIBM3klgAEuAgEsgQEliAEuAgEojwEllgEuAgEimQEloAEuAgEboQElqAEuAgEXvAFQvAGQAQIBXLkBUbkBXAIBWsYBUMYBjwECAVXDAVHDAV0CAVPOAVDOAZcBAgFRywFRywFdAgFP3AFQ3AGNAQIBS9kBUdkBXAIBSeYBUOYBjwECAUTjAVHjAV0CAULuAVDuAZcBAgFA6wFR6wFdAgE+dFB0kQECATZxUXFcAgE0flB+kgECAS97UXtdAgEthgFQhgGXAQIBK4MBUYMBXQIBKZQBUJQBjQECASWRAVGRAVwCASOeAVCeAZIBAgEemwFRmwFdAgEcpgFQpgGXAQIBGqMBUaMBXQIBGA==</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WriteLine_2" sap:VirtualizedContainerService.HintSize="287,61" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="287,60" />
      <sap2010:ViewStateData Id="ReadPDFText_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_31" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_178" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_32" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_33" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_179" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_180" sap:VirtualizedContainerService.HintSize="222,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_34" sap:VirtualizedContainerService.HintSize="242,102">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_181" sap:VirtualizedContainerService.HintSize="264,253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_35" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_182" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_183" sap:VirtualizedContainerService.HintSize="222,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="469,468" />
      <sap2010:ViewStateData Id="Sequence_184" sap:VirtualizedContainerService.HintSize="491,592">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_3">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,294.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_185" sap:VirtualizedContainerService.HintSize="264,211">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_186" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_187" sap:VirtualizedContainerService.HintSize="222,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_188" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Assign_42" sap:VirtualizedContainerService.HintSize="242,60" />
      <sap2010:ViewStateData Id="Sequence_189" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_190" sap:VirtualizedContainerService.HintSize="222,320">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="469,468" />
      <sap2010:ViewStateData Id="Sequence_191" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_4">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">360,294.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_2" sap:VirtualizedContainerService.HintSize="70,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">265,216.5</av:Point>
            <av:Size x:Key="ShapeSize">70,87</av:Size>
            <av:PointCollection x:Key="TrueConnector">265,260 130,260 130,294.5</av:PointCollection>
            <av:PointCollection x:Key="FalseConnector">335,260 460,260 460,294.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">143,120</av:Point>
            <av:Size x:Key="ShapeSize">314,60</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,180 300,210 301,210 301,216.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="211,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,120</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MoveFile_1" sap:VirtualizedContainerService.HintSize="211,22" />
      <sap2010:ViewStateData Id="WriteLine_1" sap:VirtualizedContainerService.HintSize="211,61" />
      <sap2010:ViewStateData Id="Sequence_149" sap:VirtualizedContainerService.HintSize="233,395">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="ForEach`1_2" sap:VirtualizedContainerService.HintSize="287,529" />
      <sap2010:ViewStateData Id="WriteLine_3" sap:VirtualizedContainerService.HintSize="287,61" />
      <sap2010:ViewStateData Id="Sequence_148" sap:VirtualizedContainerService.HintSize="309,955">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="RenameInvoices_1" sap:VirtualizedContainerService.HintSize="349,1035" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>