<Activity mc:Ignorable="sap sap2010 sads" x:Class="Main" mva:VisualBasic.Settings="{x:Null}" sap2010:WorkflowViewState.IdRef="Main_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities"
 xmlns:njl="clr-namespace:Newtonsoft.Json.Linq;assembly=Newtonsoft.Json"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:snm="clr-namespace:System.Net.Mail;assembly=System"
 xmlns:ui="http://schemas.uipath.com/workflow/activities"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>Newtonsoft.Json.Linq</x:String>
      <x:String>Newtonsoft.Json</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Core</AssemblyReference>
      <AssemblyReference>UiPath.Core.Activities</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>Newtonsoft.Json</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
      <AssemblyReference>Microsoft.VisualStudio.Services.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="Main" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="mailAccount" />
      <Variable x:TypeArguments="x:String" Name="mailFolder" />
      <Variable x:TypeArguments="s:Exception" Name="thrownError" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="mailMessages" />
      <Variable x:TypeArguments="x:String" Name="emailHasError" />
      <Variable x:TypeArguments="x:Int64" Name="invoiceLowRange" />
      <Variable x:TypeArguments="x:Int64" Name="invoiceHighRange" />
      <Variable x:TypeArguments="x:String" Name="emailNotInSequence" />
      <Variable x:TypeArguments="x:String" Name="excelFilePath" />
      <Variable x:TypeArguments="x:String" Name="sapServer" />
      <Variable x:TypeArguments="x:String" Name="sapUser" />
      <Variable x:TypeArguments="x:String" Name="sapPassword" />
      <Variable x:TypeArguments="x:String" Name="sapPrinter" />
      <Variable x:TypeArguments="x:String" Name="sapPrinterSearchName" />
      <Variable x:TypeArguments="x:String" Name="sapPDFFolder" />
      <Variable x:TypeArguments="x:String" Name="emailHasValidError" />
      <Variable x:TypeArguments="x:String" Name="processedMailFolder" />
      <Variable x:TypeArguments="x:String" Name="errorMailFolder" />
      <Variable x:TypeArguments="snm:MailMessage" Name="email" />
      <Variable x:TypeArguments="x:String" Name="errorMailAccount">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="errorMailCC">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="successClientEmailBody" />
      <Variable x:TypeArguments="x:String" Name="failureClientEmailBody" />
      <Variable x:TypeArguments="x:String" Name="toEmailAddress" />
    </Flowchart.Variables>
    <Flowchart.StartNode>
      <FlowStep x:Name="__ReferenceID6" sap2010:WorkflowViewState.IdRef="FlowStep_2">
        <Sequence sap2010:Annotation.AnnotationText="Reads init parameters values from settings.json file" DisplayName="Read Settings File" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:String" Name="settingsString" />
            <Variable x:TypeArguments="njl:JObject" Name="settingsJson" />
          </Sequence.Variables>
          <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_1">
            <TryCatch.Try>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_3">
                <ui:ReadTextFile Content="[settingsString]" DisplayName="Read Json file" FileName="settings.json" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
                <ui:DeserializeJson x:TypeArguments="njl:JObject" DisplayName="Deserialize json" sap2010:WorkflowViewState.IdRef="DeserializeJson`1_1" JsonObject="[settingsJson]" JsonString="[settingsString]" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" />
                <Assign sap2010:WorkflowViewState.IdRef="Assign_1">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[mailFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("mailFolder").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[mailAccount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("mailAccount").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_23">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[emailNotInSequence]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("emailNotInSequence").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_24">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[excelFilePath]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("excelFilePath").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_20">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int64">[invoiceLowRange]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int64">[Convert.ToInt64(settingsJson.GetValue("invoiceLowRange"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_21">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int64">[invoiceHighRange]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int64">[Convert.ToInt64(settingsJson.GetValue("invoiceHighRange"))]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_36">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapServer]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapServer").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_37">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapUser]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapUser").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_38">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapPassword]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapPassword").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_39">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapPrinter]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapPrinter").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_40">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapPrinterSearchName]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapPrinterSearchName").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_41">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[sapPDFFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("sapPDFFolder").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_52">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[emailHasValidError]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("emailHasValidError").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_53">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[processedMailFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("processedMailFolder").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_54">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[errorMailFolder]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("errorMailFolder").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_55">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[errorMailAccount]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("errorMailAccount").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_56">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[errorMailCC]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("errorMailCC").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_57">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[successClientEmailBody]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("successClientEmailBody").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_58">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[failureClientEmailBody]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[settingsJson.GetValue("failureClientEmailBody").ToString()]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </TryCatch.Try>
            <TryCatch.Catches>
              <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                <ActivityAction x:TypeArguments="s:Exception">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                  </ActivityAction.Argument>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
                      <Assign.To>
                        <OutArgument x:TypeArguments="s:Exception">[thrownError]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Error" Message="[String.Format(&quot;Error in reading settings file: {0}{1}Stack trace: {2}&quot;, thrownError.Message, Environment.NewLine, thrownError.StackTrace)]" />
                    <Throw DisplayName="Private: Throw" Exception="[exception]" sap2010:WorkflowViewState.IdRef="Throw_1" />
                  </Sequence>
                </ActivityAction>
              </Catch>
            </TryCatch.Catches>
          </TryCatch>
        </Sequence>
        <FlowStep.Next>
          <FlowStep x:Name="__ReferenceID5" sap2010:WorkflowViewState.IdRef="FlowStep_5">
            <ui:GetOutlookMailMessages TimeoutMS="{x:Null}" Account="[mailAccount]" sap2010:Annotation.AnnotationText="Takes top 1 email from inbox" DisplayName="Get outlook mail messages" Filter="[Subject] = 'The Form ''Request for invoice'' was submitted' Or [Subject] = 'Requested copy: Invoice not found' Or [Subject] = 'Potential SPAM:The Form ''Request for invoice'' was submitted'" GetAttachements="False" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[mailFolder]" MarkAsRead="True" Messages="[mailMessages]" OnlyUnreadMessages="False" Top="1" />
            <FlowStep.Next>
              <FlowDecision x:Name="__ReferenceID7" sap2010:Annotation.AnnotationText="Email found?" Condition="[mailMessages.Count() &gt; 0]" sap2010:WorkflowViewState.IdRef="FlowDecision_3">
                <FlowDecision.True>
                  <FlowStep x:Name="__ReferenceID9" sap2010:WorkflowViewState.IdRef="FlowStep_45">
                    <Sequence sap2010:Annotation.AnnotationText="Reading email, getting Invoices from SAP and sending them to a client" DisplayName="Process Email" sap2010:WorkflowViewState.IdRef="Sequence_45">
                      <Sequence.Variables>
                        <Variable x:TypeArguments="x:String" Name="invoicesString" />
                        <Variable x:TypeArguments="scg:List(x:Int64)" Default="[new List(of Long)]" Name="invoicesList" />
                        <Variable x:TypeArguments="scg:List(x:Int64)" Default="[new List(of Long)]" Name="customerIdList" />
                        <Variable x:TypeArguments="x:String" Name="errorMessage" />
                        <Variable x:TypeArguments="scg:List(x:String)" Default="[new List(of String)]" Name="filesToSend" />
                        <Variable x:TypeArguments="scg:List(x:String)" Name="allFilesToSend" />
                        <Variable x:TypeArguments="x:Boolean" Name="canGetAllCustomers" />
                      </Sequence.Variables>
                      <TryCatch DisplayName="Try catch" sap2010:WorkflowViewState.IdRef="TryCatch_9">
                        <TryCatch.Try>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_47">
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_28" Level="Info" Message="Started processing email" />
                            <Assign sap2010:WorkflowViewState.IdRef="Assign_30">
                              <Assign.To>
                                <OutArgument x:TypeArguments="snm:MailMessage">[email]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="snm:MailMessage">[mailMessages.FirstOrDefault()]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Sequence sap2010:Annotation.AnnotationText="Get ToEmail and invoices list from email body" DisplayName="Read email body" sap2010:WorkflowViewState.IdRef="Sequence_46">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetInvoicesFromEmail workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="GetInvoicesFromEmail.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="snm:MailMessage" x:Key="Email">[email]</InArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="ToEmailAddress">[toEmailAddress]</OutArgument>
                                  <OutArgument x:TypeArguments="x:String" x:Key="InvoicesString">[invoicesString]</OutArgument>
                                  <OutArgument x:TypeArguments="scg:List(x:Int64)" x:Key="InvoicesList">[invoicesList]</OutArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                            <Sequence sap2010:Annotation.AnnotationText="Checking if at least one invoice is in rage. If it is, send email and terminate process. If not, continue process." DisplayName="Check Invoices Range" sap2010:WorkflowViewState.IdRef="Sequence_55">
                              <If Condition="[invoicesList.Where(function(x) x&gt;=invoiceLowRange).Where(function(x) x &lt;= invoiceHighRange).Count() &gt; 0]" DisplayName="If In Range" sap2010:WorkflowViewState.IdRef="If_2">
                                <If.Then>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_57">
                                    <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" Cc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[email.Body]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_1" IsBodyHtml="False" IsDraft="False" Subject="[email.Subject]" To="[emailNotInSequence]">
                                      <ui:SendOutlookMail.Files>
                                        <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                      </ui:SendOutlookMail.Files>
                                    </ui:SendOutlookMail>
                                    <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_31" Level="Info" Message="[&quot;Send email to: &quot; +emailNotInSequence]" />
                                  </Sequence>
                                </If.Then>
                                <If.Else>
                                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_56">
                                    <Sequence sap2010:Annotation.AnnotationText="Get all available customer ids for this ToMail email from excel file" DisplayName="Get Customer IDs" sap2010:WorkflowViewState.IdRef="Sequence_48">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke GetCustomersFromExcel workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="GetCustomersFromExcel.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="ExcelFilePath">[excelFilePath]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="ToEmail">[toEmailAddress]</InArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:Int64)" x:Key="CustomerIdList">[customerIdList]</OutArgument>
                                          <OutArgument x:TypeArguments="x:Boolean" x:Key="CanGetAllCustomers">[canGetAllCustomers]</OutArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence sap2010:Annotation.AnnotationText="Opens SAP, connects and sends invoices to Outlook mailbox" DisplayName="SAP activities" sap2010:WorkflowViewState.IdRef="Sequence_61">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SAPSendInvoices workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_5" UnSafe="False" WorkflowFileName="SAPSendInvoices.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="Server">[sapServer]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="User">[sapUser]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Password">[sapPassword]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="Printer">[sapPrinter]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="PrinterSearchName">[sapPrinterSearchName]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="PDFFolder">[sapPDFFolder]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="InvoicesString">[invoicesString]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence sap2010:Annotation.AnnotationText="Renaming invoices PDF files" DisplayName="Rename Invoice Files" sap2010:WorkflowViewState.IdRef="Sequence_62">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke RenameInvoices workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_6" UnSafe="False" WorkflowFileName="RenameInvoices.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="PDFFolder">[sapPDFFolder]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence sap2010:Annotation.AnnotationText="Check if client invoices were found and that client can get them" DisplayName="Check Invoices" sap2010:WorkflowViewState.IdRef="Sequence_51">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke CheckSavedInvoices workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_8" UnSafe="False" WorkflowFileName="CheckSavedInvoices.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="scg:List(x:Int64)" x:Key="InvoicesList">[invoicesList]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:Int64)" x:Key="CustomerIdList">[customerIdList]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="SAPPDFFolder">[sapPDFFolder]</InArgument>
                                          <OutArgument x:TypeArguments="x:String" x:Key="ErrorMessage">[errorMessage]</OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="FilesToSend">[filesToSend]</OutArgument>
                                          <OutArgument x:TypeArguments="scg:List(x:String)" x:Key="AllFilesToSend">[allFilesToSend]</OutArgument>
                                          <InArgument x:TypeArguments="x:Boolean" x:Key="CanGetAllCustomers">[canGetAllCustomers]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                    <Sequence sap2010:Annotation.AnnotationText="Send Invoices to a Client or inform HelpDesk" DisplayName="Send Invoices" sap2010:WorkflowViewState.IdRef="Sequence_87">
                                      <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke SendInvoices workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="SendInvoices.xaml">
                                        <ui:InvokeWorkflowFile.Arguments>
                                          <InArgument x:TypeArguments="x:String" x:Key="ErrorMessage">[errorMessage]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="ToEmailAddress">[toEmailAddress]</InArgument>
                                          <InArgument x:TypeArguments="snm:MailMessage" x:Key="Email">[email]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="EmailHasValidError">[emailHasValidError]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="FilesToSend">[filesToSend]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="SAPPDFFolder">[sapPDFFolder]</InArgument>
                                          <InArgument x:TypeArguments="scg:List(x:String)" x:Key="AllFilesToSend">[allFilesToSend]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="EmailSuccessTemplate">[successClientEmailBody]</InArgument>
                                          <InArgument x:TypeArguments="x:String" x:Key="EmailFailureTemplate">[failureClientEmailBody]</InArgument>
                                        </ui:InvokeWorkflowFile.Arguments>
                                      </ui:InvokeWorkflowFile>
                                    </Sequence>
                                  </Sequence>
                                </If.Else>
                              </If>
                            </Sequence>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap2010:WorkflowViewState.IdRef="Catch`1_10">
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_54">
                                <Assign sap2010:WorkflowViewState.IdRef="Assign_29">
                                  <Assign.To>
                                    <OutArgument x:TypeArguments="s:Exception">[thrownError]</OutArgument>
                                  </Assign.To>
                                  <Assign.Value>
                                    <InArgument x:TypeArguments="s:Exception">[exception]</InArgument>
                                  </Assign.Value>
                                </Assign>
                                <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_30" Level="Error" Message="[thrownError.Message + &quot; &quot; + thrownError.StackTrace]" />
                              </Sequence>
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                        <TryCatch.Finally>
                          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_86">
                            <Sequence sap2010:Annotation.AnnotationText="Delete PDF files" DisplayName="Clean Up" sap2010:WorkflowViewState.IdRef="Sequence_85">
                              <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke workflow file" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_9" UnSafe="False" WorkflowFileName="DeleteFiles.xaml">
                                <ui:InvokeWorkflowFile.Arguments>
                                  <InArgument x:TypeArguments="x:String" x:Key="folder">[sapPDFFolder]</InArgument>
                                </ui:InvokeWorkflowFile.Arguments>
                              </ui:InvokeWorkflowFile>
                            </Sequence>
                            <ui:LogMessage DisplayName="Log message" sap2010:WorkflowViewState.IdRef="LogMessage_29" Level="Info" Message="Finished processing email" />
                          </Sequence>
                        </TryCatch.Finally>
                      </TryCatch>
                    </Sequence>
                    <FlowStep.Next>
                      <FlowStep x:Name="__ReferenceID10" sap2010:WorkflowViewState.IdRef="FlowStep_54">
                        <Flowchart sap2010:Annotation.AnnotationText="Moves email to appropriate mailbox folder and if error was thrown, send error email" DisplayName="Handle Error" sap2010:WorkflowViewState.IdRef="Flowchart_3">
                          <Flowchart.StartNode>
                            <FlowDecision x:Name="__ReferenceID0" Condition="[thrownError IsNot Nothing]" DisplayName="Error was thrown?" sap2010:WorkflowViewState.IdRef="FlowDecision_7">
                              <FlowDecision.True>
                                <FlowDecision x:Name="__ReferenceID2" Condition="[thrownError.Message.Contains(&quot;Kredit:&quot;)]" DisplayName="Send to Kredit?" sap2010:WorkflowViewState.IdRef="FlowDecision_6">
                                  <FlowDecision.True>
                                    <FlowStep x:Name="__ReferenceID4" sap2010:WorkflowViewState.IdRef="FlowStep_51">
                                      <Sequence DisplayName="Send Error to Kredit" sap2010:WorkflowViewState.IdRef="Sequence_92">
                                        <ui:SendOutlookMail Account="{x:Null}" Bcc="{x:Null}" MailMessage="{x:Null}" TimeoutMS="{x:Null}" Body="[thrownError.Message.Replace(&quot;Kredit:&quot;, &quot;&quot;).Trim + Environment.NewLine + &quot;---------------------------------------------------------&quot; + Environment.NewLine + email.Body.Replace(String.Format(&quot; &lt;mailto:{0}&gt;&quot;, toEmailAddress), &quot;&quot;).Replace(Environment.NewLine+Environment.NewLine, Environment.NewLine)]" Cc="[errorMailCC]" DisplayName="Send Outlook Mail Message" sap2010:WorkflowViewState.IdRef="SendOutlookMail_2" IsBodyHtml="False" IsDraft="False" Subject="Requested copy: Invoice not found" To="[emailHasValidError]">
                                          <ui:SendOutlookMail.Files>
                                            <scg:List x:TypeArguments="InArgument(x:String)" Capacity="0" />
                                          </ui:SendOutlookMail.Files>
                                        </ui:SendOutlookMail>
                                        <ui:MoveOutlookMessage Account="[mailAccount]" DisplayName="Move Mail to Forwarded Folder" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_6" MailFolder="[processedMailFolder]" MailMessage="[email]" />
                                      </Sequence>
                                    </FlowStep>
                                  </FlowDecision.True>
                                  <FlowDecision.False>
                                    <FlowStep x:Name="__ReferenceID3" sap2010:WorkflowViewState.IdRef="FlowStep_52">
                                      <Sequence DisplayName="Send Error to Kermit" sap2010:WorkflowViewState.IdRef="Sequence_93">
                                        <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke errorHandling workflow" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_16" UnSafe="False" WorkflowFileName="ErrorHandling.xaml">
                                          <ui:InvokeWorkflowFile.Arguments>
                                            <InArgument x:TypeArguments="x:String" x:Key="errorMailAccount">[errorMailAccount]</InArgument>
                                            <InArgument x:TypeArguments="snm:MailMessage" x:Key="message">[email]</InArgument>
                                            <InOutArgument x:TypeArguments="s:Exception" x:Key="thrownError">[thrownError]</InOutArgument>
                                            <InArgument x:TypeArguments="x:String" x:Key="errorMailCC">[errorMailCC]</InArgument>
                                          </ui:InvokeWorkflowFile.Arguments>
                                        </ui:InvokeWorkflowFile>
                                        <ui:MoveOutlookMessage Account="[mailAccount]" DisplayName="Move Mail to Forwarded Folder" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_7" MailFolder="[errorMailFolder]" MailMessage="[email]" />
                                      </Sequence>
                                    </FlowStep>
                                  </FlowDecision.False>
                                </FlowDecision>
                              </FlowDecision.True>
                              <FlowDecision.False>
                                <FlowStep x:Name="__ReferenceID1" sap2010:WorkflowViewState.IdRef="FlowStep_53">
                                  <ui:MoveOutlookMessage Account="[mailAccount]" DisplayName="Move Mail to Processed Folder" sap2010:WorkflowViewState.IdRef="MoveOutlookMessage_8" MailFolder="[processedMailFolder]" MailMessage="[email]" />
                                </FlowStep>
                              </FlowDecision.False>
                            </FlowDecision>
                          </Flowchart.StartNode>
                          <x:Reference>__ReferenceID0</x:Reference>
                          <x:Reference>__ReferenceID1</x:Reference>
                          <x:Reference>__ReferenceID2</x:Reference>
                          <x:Reference>__ReferenceID3</x:Reference>
                          <x:Reference>__ReferenceID4</x:Reference>
                        </Flowchart>
                        <FlowStep.Next>
                          <x:Reference>__ReferenceID5</x:Reference>
                        </FlowStep.Next>
                      </FlowStep>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.True>
                <FlowDecision.False>
                  <FlowStep x:Name="__ReferenceID8" sap2010:WorkflowViewState.IdRef="FlowStep_9">
                    <Sequence DisplayName="Wait 10 min" sap2010:WorkflowViewState.IdRef="Sequence_7">
                      <Delay Duration="00:00:10" sap2010:WorkflowViewState.IdRef="Delay_1" />
                    </Sequence>
                    <FlowStep.Next>
                      <x:Reference>__ReferenceID5</x:Reference>
                    </FlowStep.Next>
                  </FlowStep>
                </FlowDecision.False>
              </FlowDecision>
            </FlowStep.Next>
          </FlowStep>
        </FlowStep.Next>
      </FlowStep>
    </Flowchart.StartNode>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
    <x:Reference>__ReferenceID8</x:Reference>
    <x:Reference>__ReferenceID9</x:Reference>
    <x:Reference>__ReferenceID10</x:Reference>
    <sads:DebugSymbol.Symbol>dzxDOlxVc2Vyc1xhaWRhcy5ub3J2YWlzYXNcRG9jdW1lbnRzXEdpdEh1YlxJbnZvaWNlc1xNYWluLnhhbWzFAUcDjQQPAgEBXgteOgIBA2MLYzoCAQJsCaYCFAMBvgGpAg2pAsQEAwG1AasCcKsCjwEDAbMB+AMV+gMgAwGwAa4CFb0DIAIBMcADGe4DJQIBBHELpQIWAwG/AakCvgSpAsEEAwG9AakCRakCVAMBuwGpAsUBqQKFAwMBugGpAo4EqQKeBAMBuAGpAuQDqQLyAwMBtgH5Axf5A14DAbEBsQJPsQJkAgE0sgJPsgJkAgEztAJQtAJnAgEyuAIXvAMiAgE1wgNNwgNqAgEv5AMj5APwAQIBKMQDUcQDhgECASbTAyfdAzICARTHAyfOAzICAQVzD44CGgMBywGWAhOhAh4DAcAB+QMn+QMxAwGyAboCG5oDJgIBSLEDG7oDJgIBQKIDH6wDKgIBNuQDQuQDUQIBLeQD5AHkA+0BAgEr5APAAeQD1wECASnUAynbA0ECARzcAyncA/IBAgEVyAMpzAM+AgENzQMpzQP2AQIBBnQRdKYBAwGZAnYRfRoDAZQCfhGFARoDAZAChgERjQEaAwGMAo4BEZUBGgMBiAKWARGdARoDAYQCngERpQEaAwGAAqYBEa0BGgMB/AGuARG1ARoDAfgBtgERvQEaAwH0Ab4BEcUBGgMB8AHGARHNARoDAewBzgER1QEaAwHoAdYBEd0BGgMB5AHeARHlARoDAeAB5gER7QEaAwHcAe4BEfUBGgMB2AH2ARH9ARoDAdQB/gERhQIaAwHQAYYCEY0CGgMBzAGXAhWeAh4DAcYBnwIVnwKdAgMBxAGgAhWgAn0DAcEBuwIduwKoAQMBrgG8Ah3DAiYDAaoBxAIdzQIoAwGfAc4CHZkDKAIBSbIDHbgDKAIBQ7kDHbkDqQECAUGjAyGqAyoCATurAyGrA9MBAgE32ANu2AN7AgEk1gNt1gN/AgEi2QNo2QN1AgEg1APfAdQD8wECAR/XA2vXA3ICAR3cA0jcA1cCARrcA+YB3APvAQIBGNwDxgHcA9kBAgEWyAO2BcgDzAUCARLIA/gDyAOHBAIBEMgDkAHIA/QDAgEPyAOPBcgDsgUCAQ7NA0jNA1cCAQvNA+oBzQPzAQIBCc0DxgHNA90BAgEHdGN0cgMBnAJ0KnQ8AwGaAns8e2wDAZcCeD14SQMBlQKDATyDAW0DAZMCgAE9gAFKAwGRAosBPIsBdAMBjwKIAT2IAVEDAY0CkwE8kwFvAwGLApABPZABTAMBiQKbATubAXYDAYcCmAE8mAFNAwGFAqMBO6MBdwMBgwKgATygAU4DAYECqwE8qwFrAwH/AagBPagBSAMB/QGzATyzAWkDAfsBsAE9sAFGAwH5AbsBPLsBbQMB9wG4AT24AUoDAfUBwwE8wwFsAwHzAcABPcABSQMB8QHLATzLAXYDAe8ByAE9yAFTAwHtAdMBPNMBbgMB6wHQAT3QAUsDAekB2wE82wF0AwHnAdgBPdgBUQMB5QHjATzjAXUDAeMB4AE94AFSAwHhAesBPOsBcQMB3wHoAT3oAU4DAd0B8wE88wFyAwHbAfABPfABTwMB2QH7ATz7AW0DAdcB+AE9+AFKAwHVAYMCPIMCeAMB0wGAAj2AAlUDAdEBiwI8iwJ4AwHPAYgCPYgCVQMBzQGcAkOcAk4DAckBmQJEmQJRAwHHAZ8CgwGfApoCAwHFAaACQ6ACUAMBwgG7AosBuwKlAQMBrwHBAk/BAm4DAa0BvgJQvgJXAwGrAcUCH8wCNwMBoAHPAh+YAyQCAUqzAx+3AzcCAUS5A4sBuQOmAQIBQqgDT6gDWgIBPqUDUKUDXQIBPKsDkAGrA9ABAgE4yQJiyQJyAwGoAcgCYsgCcgMBpgHHAl/HAmYDAaQBygJpygJ3AwGiAcUC2wHFAvYBAwGhAc8CLc8CoQECAUvRAiPYAi4DAZQB2wIjlgMuAgFMtQNZtQNnAgFGswPLAbMD3QECAUXSAiXWAjoDAZgB1wIl1wLJAQMBlQHcAiXlAjADAYkB5gIl8gIwAgF48wIl+QIwAgFz+gIlhgMwAgFihwMllQMwAgFN0gLFAtIC2wIDAZ0B0gKaAdICqAEDAZsB0gKwAtICwQIDAZkB1wKTAdcCxgEDAZYB3QIn5AI/AwGKAecCJ/ECPwIBefQCJ/gCPwIBdPsCJ4UDPwIBY4gDJ5QDPwIBTuECc+ECgwEDAZIB3wJo3wJ3AwGQAeICb+ICgwEDAY4B3QLkAd0CgAIDAY0B4AJi4AJyAwGLAe0CbO0CggEDAYcB7gJk7gJyAwGFAe8Cae8CeQMBgwHqAl/qAmgDAYEB6QJh6QJsAgF/7AJi7AJuAgF96wJj6wJwAgF75wLeAecC9AECAXr2AmT2AnICAXb0At0B9ALyAQIBdf4Ccv4CggECAXH/Amf/AnUCAW+AA2iAA3YCAW2CA3SCA4QBAgFr/QJw/QJ+AgFpgwNugwOCAQIBZ4EDcYEDfgIBZfsC4QH7AvoBAgFkjQNtjQOBAQIBYIsDaYsDeQIBXowDZ4wDbgIBXI8DZ48DdQIBWooDZ4oDdQIBWJEDb5EDhwECAVaQA3OQA4MBAgFUjgNwjgN9AgFSiAPcAYgD7wECAVGSA2+SA4cBAgFP</sads:DebugSymbol.Symbol>
  </Flowchart>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="ReadTextFile_1" sap:VirtualizedContainerService.HintSize="314,59" />
      <sap2010:ViewStateData Id="DeserializeJson`1_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_23" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_24" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_20" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_21" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_36" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_37" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_38" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_39" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_40" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_41" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_52" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_53" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_54" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_55" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_56" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_57" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Assign_58" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="336,2183">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_1" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Throw_1" sap:VirtualizedContainerService.HintSize="314,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="336,377">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_1" sap:VirtualizedContainerService.HintSize="404,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_1" sap:VirtualizedContainerService.HintSize="418,2410" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="200,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetOutlookMailMessages_1" sap:VirtualizedContainerService.HintSize="200,49">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_28" sap:VirtualizedContainerService.HintSize="605,91" />
      <sap2010:ViewStateData Id="Assign_30" sap:VirtualizedContainerService.HintSize="605,60" />
      <sap2010:ViewStateData Id="InvokeWorkflowFile_2" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_46" sap:VirtualizedContainerService.HintSize="605,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_1" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="LogMessage_31" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_57" sap:VirtualizedContainerService.HintSize="336,400">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_3" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_48" sap:VirtualizedContainerService.HintSize="336,253">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_5" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_61" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_62" sap:VirtualizedContainerService.HintSize="200,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_8" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_51" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_11" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_87" sap:VirtualizedContainerService.HintSize="200,93">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_56" sap:VirtualizedContainerService.HintSize="222,779">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="583,927" />
      <sap2010:ViewStateData Id="Sequence_55" sap:VirtualizedContainerService.HintSize="605,1093">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_47" sap:VirtualizedContainerService.HintSize="627,1581">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_29" sap:VirtualizedContainerService.HintSize="314,60" />
      <sap2010:ViewStateData Id="LogMessage_30" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_54" sap:VirtualizedContainerService.HintSize="336,312">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Catch`1_10" sap:VirtualizedContainerService.HintSize="631,21">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_9" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_85" sap:VirtualizedContainerService.HintSize="314,78">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LogMessage_29" sap:VirtualizedContainerService.HintSize="314,91" />
      <sap2010:ViewStateData Id="Sequence_86" sap:VirtualizedContainerService.HintSize="336,333">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="TryCatch_9" sap:VirtualizedContainerService.HintSize="645,1808" />
      <sap2010:ViewStateData Id="Sequence_45" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SendOutlookMail_2" sap:VirtualizedContainerService.HintSize="314,145" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_6" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_92" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="InvokeWorkflowFile_16" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="MoveOutlookMessage_7" sap:VirtualizedContainerService.HintSize="314,87" />
      <sap2010:ViewStateData Id="Sequence_93" sap:VirtualizedContainerService.HintSize="336,338">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_52">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">360,374.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_6" sap:VirtualizedContainerService.HintSize="87,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">255,286.5</av:Point>
            <av:Size x:Key="ShapeSize">87,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">342,330 460,330 460,374.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">255,330 130,330 130,374.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="MoveOutlookMessage_8" sap:VirtualizedContainerService.HintSize="200,51" />
      <sap2010:ViewStateData Id="FlowStep_53">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">380,224.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_7" sap:VirtualizedContainerService.HintSize="102,87">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">249,126.5</av:Point>
            <av:Size x:Key="ShapeSize">102,87</av:Size>
            <av:PointCollection x:Key="FalseConnector">351,170 480,170 480,224.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">249,170 238.5,170 238.5,256.5 298.5,256.5 298.5,286.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_3" sap:VirtualizedContainerService.HintSize="200,108">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
            <av:PointCollection x:Key="ConnectorLocation">300,77.5 300,126.5</av:PointCollection>
            <x:Double x:Key="Width">602</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_54">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,256</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">230,310 310,310</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_45">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">30,406</av:Point>
            <av:Size x:Key="ShapeSize">200,108</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">130,406 130,364</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Delay_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_9">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">540,354.5</av:Point>
            <av:Size x:Key="ShapeSize">200,51</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">640,354.5 640,310 510,310</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowDecision_3" sap:VirtualizedContainerService.HintSize="126,114">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <av:Point x:Key="ShapeLocation">347,403</av:Point>
            <av:Size x:Key="ShapeSize">126,114</av:Size>
            <av:PointCollection x:Key="FalseConnector">473,460 640,460 640,405.5</av:PointCollection>
            <av:PointCollection x:Key="TrueConnector">347,460 230,460</av:PointCollection>
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_5">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">310,285.5</av:Point>
            <av:Size x:Key="ShapeSize">200,49</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">410,334.5 410,403</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="FlowStep_2">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <av:Point x:Key="ShapeLocation">310,113.5</av:Point>
            <av:Size x:Key="ShapeSize">200,93</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">410,206.5 410,285.5</av:PointCollection>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Flowchart_1" sap:VirtualizedContainerService.HintSize="790,636">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <av:Point x:Key="ShapeLocation">380,2.5</av:Point>
            <av:Size x:Key="ShapeSize">60,75</av:Size>
            <av:PointCollection x:Key="ConnectorLocation">410,77.5 410,113.5</av:PointCollection>
            <x:Double x:Key="Width">776.5</x:Double>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Main_1" sap:VirtualizedContainerService.HintSize="830,716" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>